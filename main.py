from fastapi import FastAPI, HTTPException, Query
from recommender import load_model, recommend_words
from schemas import RecommendationResponse
from typing import List

app = FastAPI(
    title="Words in Politic API",
    description="–£–∑–Ω–∞–π —Å–ª–æ–≤–∞, –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≤–∞—à–∏–º —Å–ª–æ–≤–æ–º.",
    version="1.0.0",
    contact={
        "name": "Your Name",  # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±—â–µ–µ –∏–º—è –∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ placeholder
        "email": "your_email@example.com"  # –û–±—â–∏–π email
    }
)

model = load_model()

@app.get("/", tags=["Health Check"])
def read_root():
    return {"message": "üé∂ Poltic associations is running!"}

@app.get(
    "/api/recommend/{track_title}",
    response_model=RecommendationResponse,
    summary="–ü–æ–ª—É—á–∏—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å–ª–æ–≤–∞",
    description="–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –≤–≤–µ–¥–µ–Ω—ã–º, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ—Å–∏–Ω—É—Å–Ω–æ–µ —Å—Ö–æ–¥—Å—Ç–≤–æ –ø–æ –ø—Ä–∏–∑–Ω–∞–∫–∞–º.",
    tags=["Recommendations"]
)
def get_recommendations(
    track_title: str,
    N: int = Query(5, alias="n", ge=1, le=20, description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–¥–∞–≤–∞–µ–º—ã—Ö —Å–ª–æ–≤ (–æ—Ç 1 –¥–æ 20)")
):
    recommendations = recommend_words(model, track_title, N)
    
    if not recommendations:
        raise HTTPException(
            status_code=404,
            detail=f"–°–ª–æ–≤–∞ '{track_title}' –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."
        )
    
    return {"requested_track": track_title, "recommendations": recommendations}